{"version":3,"sources":["request/api.js","utils/util.js","pages/login/Login.js"],"names":["HOST","request","path","param","Promise","resolve","reject","fullUrl","parseTpl","serializeJson","client_id","client_secret","fetch","then","r","text","res","JSON","parse","message","error","catch","err","getUser","getRepos","getFollowing","getFollowers","getInfo","getRepoDetail","getEvents","template","context","replace","match","key","trim","json","Object","entries","map","item","join","cutStr","val","length","substr","RegistrationForm","state","loading","handleSubmit","e","preventDefault","ls","remove","props","form","validateFields","values","setState","username","api","data","this","id","set","history","goBack","getFieldDecorator","get","to","className","onSubmit","Item","rules","required","prefix","type","style","color","placeholder","allowClear","textAlign","htmlType","React","Component","WrappedRegistrationForm","Form","create","name","withRouter"],"mappings":"gJAIMA,EAAO,yBAEb,SAASC,EAAQC,EAAMC,GACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAIC,EAAUC,YAASR,EAAOE,EAAMC,GACpCI,EAAUA,EAAU,IAAME,YAAc,eACjCN,EADgC,CAEnCO,UAAW,uBACXC,cAAe,8CAEnBC,MAAML,GAASM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAOF,MAAK,SAAAG,IACnCA,EAAMC,KAAKC,MAAMF,IACTG,SACJA,IAAQC,MAAMJ,EAAIG,SAAW,4BAEjCd,EAAQW,SACRK,OAAM,SAAAC,GACNhB,EAAOgB,SAKJ,KACXC,QADW,SACHpB,GACJ,OAAOF,EAAQ,sBAAuBE,IAG1CqB,SALW,SAKFrB,GACL,OAAOF,EAAQ,4BAA6BE,IAGhDsB,aATW,SASEtB,GACT,OAAOF,EAAQ,gCAAiCE,IAGpDuB,aAbW,SAaEvB,GACT,OAAOF,EAAQ,gCAAiCE,IAGpDwB,QAjBW,SAiBHxB,GACJ,OAAOF,EAAQ,sBAAuBE,IAG1CyB,cArBW,SAqBGzB,GACV,OAAOF,EAAQ,+BAAgCE,IAGnD0B,UAzBW,SAyBD1B,GACN,OAAOF,EAAQ,6BAA8BE,M,iCCpDrD,sGAAO,IAAMK,EAAW,SAACsB,EAAUC,GAC/B,OAAOD,EAASE,QAAQ,kBAAkB,SAACC,EAAOC,GAAR,OAAgBH,EAAQG,EAAIC,YAG7D1B,EAAgB,SAAC2B,GAC1B,OAAOC,OAAOC,QAAQF,GAAMG,KAAI,SAAAC,GAC5B,MAAM,GAAN,OAAUA,EAAK,GAAf,YAAqBA,EAAK,OAC3BC,KAAK,MAGCC,EAAS,SAACC,GAAsB,IAAjBC,EAAgB,uDAAP,GACjC,OAAID,GAAOA,EAAIC,OAASA,EACd,GAAN,OAAUD,EAAIE,OAAO,EAAGD,GAAxB,OAEGD,I,iNCFLG,E,2MACFC,MAAQ,CACJC,SAAS,G,EAGbC,aAAe,SAAAC,GACXA,EAAEC,iBACFC,IAAGC,OAAO,0BACV,EAAKC,MAAMC,KAAKC,gBAAe,SAAClC,EAAKmC,GAC5BnC,IACD,EAAKoC,SAAS,CAAEV,SAAS,IACzB,EAAKzB,QAAQkC,EAAOE,e,uEAKlBA,G,kGACSC,IAAIrC,QAAQ,CAAEoC,c,OAA3BE,E,OACNC,KAAKJ,SAAS,CAAEV,SAAS,IACrBa,EAAKE,KACLX,IAAGY,IAAI,yBAA0BL,GAEjCG,KAAKR,MAAMW,QAAQC,U,gFAIjB,IACEC,EAAsBL,KAAKR,MAAMC,KAAjCY,kBAER,OADaf,IAAGgB,IAAI,0BAER,kBAAC,IAAD,CAAUC,GAAG,UAEd,yBAAKC,UAAU,SAClB,kBAAC,IAAD,CAAMC,SAAUT,KAAKb,aAAcqB,UAAU,cACzC,kBAAC,IAAKE,KAAN,KACKL,EAAkB,WAAY,CAC3BM,MAAO,CAAC,CAAEC,UAAU,EAAMvD,QAAS,iCADtCgD,CAGG,kBAAC,IAAD,CACIQ,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,WACZC,YAAU,MAItB,kBAAC,IAAKR,KAAN,CAAWK,MAAO,CAAEI,UAAW,WAC3B,kBAAC,IAAD,CAAQL,KAAK,UAAU5B,QAASc,KAAKf,MAAMC,QAASkC,SAAS,UAA7D,YAGR,yBAAKZ,UAAU,oB,GAjDAa,IAAMC,WAuD/BC,EAA0BC,IAAKC,OAAO,CAAEC,KAAM,YAApBF,CAAkCxC,GAEnD2C,sBAAWJ","file":"static/js/11.24d4048c.chunk.js","sourcesContent":["import { parseTpl, serializeJson } from '@/utils/util';\nimport {\n    message\n} from 'antd';\nconst HOST = 'https://api.github.com';\n\nfunction request(path, param) {\n    return new Promise((resolve, reject) => {\n        let fullUrl = parseTpl(HOST + path, param);\n        fullUrl = fullUrl + '?' + serializeJson({\n            ...param,\n            client_id: 'aa18248a5e12eca15a6f',\n            client_secret: '389eac9e777a6ced5127b45193640580174c426d'\n        })\n        fetch(fullUrl).then(r => r.text().then(res => {\n            res = JSON.parse(res);\n            if (res.message) {\n                message.error(res.message || '接口出错');\n            }\n            resolve(res);\n        })).catch(err => {\n            reject(err);\n        });\n    });\n}\n\nexport default {\n    getUser(param) {\n        return request('/users/{{username}}', param);\n    },\n\n    getRepos(param) {\n        return request('/users/{{username}}/repos', param);\n    },\n\n    getFollowing(param) {\n        return request('/users/{{username}}/following', param);\n    },\n\n    getFollowers(param) {\n        return request('/users/{{username}}/followers', param);\n    },\n\n    getInfo(param) {\n        return request('/users/{{username}}', param);\n    },\n\n    getRepoDetail(param) {\n        return request('/repos/{{username}}/{{repo}}', param);\n    },\n\n    getEvents(param) {\n        return request('/users/{{username}}/events', param);\n    }\n};","export const parseTpl = (template, context) => {\n    return template.replace(/\\{\\{(.*?)\\}\\}/g, (match, key) => context[key.trim()]);\n}\n\nexport const serializeJson = (json) => {\n    return Object.entries(json).map(item => {\n        return `${item[0]}=${item[1]}`\n    }).join('&')\n}\n\nexport const cutStr = (val, length = 30) => {\n    if (val && val.length > length) {\n        return `${val.substr(0, length)}...`;\n    }\n    return val;\n}","import React from 'react';\nimport { \n    Form,\n    Icon,\n    Input,\n    Button,\n} from 'antd';\nimport './login.scss';\nimport api from '@api';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { ls } from '@utils/localStorage';\n\nclass RegistrationForm extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        ls.remove('my_github_app_username');\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.setState({ loading: true} );\n                this.getUser(values.username);\n            }\n        });\n    };\n\n    async getUser(username) {\n        const data = await api.getUser({ username });\n        this.setState({ loading: false });\n        if (data.id) {\n            ls.set('my_github_app_username', username);\n            // this.props.history.push('repos');\n            this.props.history.goBack();\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const user = ls.get('my_github_app_username');\n        if (user) {\n            return (<Redirect to=\"repos\" />);\n        } else {\n            return <div className=\"login\">\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                                allowClear\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" loading={this.state.loading} htmlType=\"submit\">Log in</Button>\n                    </Form.Item>\n                </Form>\n                <div className=\"login-mask\"></div>\n            </div>\n        }\n    }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nexport default withRouter(WrappedRegistrationForm);"],"sourceRoot":""}