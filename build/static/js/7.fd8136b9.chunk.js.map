{"version":3,"sources":["request/api.js","utils/util.js","../avatar/index.jsx","pages/components/infoCard/InfoCard.js","pages/components/list/components/Item.js","pages/components/list/List.js","pages/following/List.js"],"names":["HOST","request","path","param","Promise","resolve","reject","fullUrl","parseTpl","serializeJson","client_id","client_secret","fetch","then","r","text","res","JSON","parse","catch","err","getUser","getRepos","getFollowing","getFollowers","getInfo","getRepoDetail","getEvents","template","context","replace","match","key","trim","json","Object","entries","map","item","join","cutStr","val","length","substr","__rest","s","e","t","i","p","Avatar","scale","mounted","isImgExist","childrenWidth","nodeWidth","onError","getPrefixCls","_a","customizePrefixCls","shape","size","src","srcSet","icon","className","alt","others","prefixCls","sizeCls","classNames","classString","sizeStyle","width","height","lineHeight","fontSize","children","type","transformString","childrenStyle","msTransform","WebkitTransform","transform","sizeChildrenStyle","ref","style","opacity","this","prevProps","props","React","InfoCard","userInfo","console","log","href","html_url","target","rel","avatar_url","bio","title","color","followers","following","blog","email","location","theme","company","Component","Item","state","popoverContent","username","visible","api","setState","login","bordered","content","mouseEnterDelay","onVisibleChange","onMouseOver","bind","Meta","avatar","List","loading","list","pageParam","page","per_page","componentDidMount","getList","listMethod","ls","get","data","result","id","image","Empty","PRESENTED_IMAGE_SIMPLE","Group","onClick","onPageChange","disabled"],"mappings":"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","file":"static/js/7.fd8136b9.chunk.js","sourcesContent":["import { parseTpl, serializeJson } from '@/utils/util';\n\nconst HOST = 'https://api.github.com';\n\nfunction request(path, param) {\n    return new Promise((resolve, reject) => {\n        let fullUrl = parseTpl(HOST + path, param);\n        fullUrl = fullUrl + '?' + serializeJson({\n            ...param,\n            client_id: 'aa18248a5e12eca15a6f',\n            client_secret: '389eac9e777a6ced5127b45193640580174c426d'\n        })\n        fetch(fullUrl).then(r => r.text().then(res => {\n            resolve(JSON.parse(res));\n        })).catch(err => {\n            reject(err);\n        });\n    });\n}\n\nexport default {\n    getUser(param) {\n        return request('/users/{{username}}', param);\n    },\n\n    getRepos(param) {\n        return request('/users/{{username}}/repos', param);\n    },\n\n    getFollowing(param) {\n        return request('/users/{{username}}/following', param);\n    },\n\n    getFollowers(param) {\n        return request('/users/{{username}}/followers', param);\n    },\n\n    getInfo(param) {\n        return request('/users/{{username}}', param);\n    },\n\n    getRepoDetail(param) {\n        return request('/repos/{{username}}/{{repo}}', param);\n    },\n\n    getEvents(param) {\n        return request('/users/{{username}}/events', param);\n    }\n};","export const parseTpl = (template, context) => {\n    return template.replace(/\\{\\{(.*?)\\}\\}/g, (match, key) => context[key.trim()]);\n}\n\nexport const serializeJson = (json) => {\n    return Object.entries(json).map(item => {\n        return `${item[0]}=${item[1]}`\n    }).join('&')\n}\n\nexport const cutStr = (val, length = 30) => {\n    if (val && val.length > length) {\n        return `${val.substr(0, length)}...`;\n    }\n    return val;\n}","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nexport default class Avatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scale: 1,\n            mounted: false,\n            isImgExist: true,\n        };\n        this.setScale = () => {\n            if (!this.avatarChildren || !this.avatarNode) {\n                return;\n            }\n            const childrenWidth = this.avatarChildren.offsetWidth; // offsetWidth avoid affecting be transform scale\n            const nodeWidth = this.avatarNode.offsetWidth;\n            // denominator is 0 is no meaning\n            if (childrenWidth === 0 ||\n                nodeWidth === 0 ||\n                (this.lastChildrenWidth === childrenWidth && this.lastNodeWidth === nodeWidth)) {\n                return;\n            }\n            this.lastChildrenWidth = childrenWidth;\n            this.lastNodeWidth = nodeWidth;\n            // add 4px gap for each side to get better performance\n            this.setState({\n                scale: nodeWidth - 8 < childrenWidth ? (nodeWidth - 8) / childrenWidth : 1,\n            });\n        };\n        this.handleImgLoadError = () => {\n            const { onError } = this.props;\n            const errorFlag = onError ? onError() : undefined;\n            if (errorFlag !== false) {\n                this.setState({ isImgExist: false });\n            }\n        };\n        this.renderAvatar = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, shape, size, src, srcSet, icon, className, alt } = _a, others = __rest(_a, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"alt\"]);\n            const { isImgExist, scale, mounted } = this.state;\n            const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n            const sizeCls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n            });\n            const classString = classNames(prefixCls, className, sizeCls, {\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-image`]: src && isImgExist,\n                [`${prefixCls}-icon`]: icon,\n            });\n            const sizeStyle = typeof size === 'number'\n                ? {\n                    width: size,\n                    height: size,\n                    lineHeight: `${size}px`,\n                    fontSize: icon ? size / 2 : 18,\n                }\n                : {};\n            let { children } = this.props;\n            if (src && isImgExist) {\n                children = <img src={src} srcSet={srcSet} onError={this.handleImgLoadError} alt={alt}/>;\n            }\n            else if (icon) {\n                if (typeof icon === 'string') {\n                    children = <Icon type={icon}/>;\n                }\n                else {\n                    children = icon;\n                }\n            }\n            else {\n                const childrenNode = this.avatarChildren;\n                if (childrenNode || scale !== 1) {\n                    const transformString = `scale(${scale}) translateX(-50%)`;\n                    const childrenStyle = {\n                        msTransform: transformString,\n                        WebkitTransform: transformString,\n                        transform: transformString,\n                    };\n                    const sizeChildrenStyle = typeof size === 'number'\n                        ? {\n                            lineHeight: `${size}px`,\n                        }\n                        : {};\n                    children = (<span className={`${prefixCls}-string`} ref={(node) => (this.avatarChildren = node)} style={Object.assign(Object.assign({}, sizeChildrenStyle), childrenStyle)}>\n            {children}\n          </span>);\n                }\n                else {\n                    const childrenStyle = {};\n                    if (!mounted) {\n                        childrenStyle.opacity = 0;\n                    }\n                    children = (<span className={`${prefixCls}-string`} style={{ opacity: 0 }} ref={(node) => (this.avatarChildren = node)}>\n            {children}\n          </span>);\n                }\n            }\n            return (<span {...others} style={Object.assign(Object.assign({}, sizeStyle), others.style)} className={classString} ref={(node) => (this.avatarNode = node)}>\n        {children}\n      </span>);\n        };\n    }\n    componentDidMount() {\n        this.setScale();\n        this.setState({ mounted: true });\n    }\n    componentDidUpdate(prevProps) {\n        this.setScale();\n        if (prevProps.src !== this.props.src) {\n            this.setState({ isImgExist: true, scale: 1 });\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAvatar}</ConfigConsumer>;\n    }\n}\nAvatar.defaultProps = {\n    shape: 'circle',\n    size: 'default',\n};\n","import React from 'react';\nimport {\n    Avatar,\n    Tag,\n    Icon\n} from 'antd';\nimport './infoCard.scss';\n\nexport default class InfoCard extends React.Component {\n    render() {\n        const userInfo = this.props.userInfo;\n        console.log(userInfo)\n        return (\n            <div className=\"info-card\">\n                <a href={userInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Avatar src={userInfo.avatar_url} />\n                </a>\n                <span className=\"info-card-bio\">{userInfo.bio || 'He/She says nothing.'}</span>\n                <div className=\"info-card-tags\">\n                    <Tag title=\"followers\" color=\"#2db7f5\"><Icon type=\"user\" />&nbsp;{userInfo.followers || 0}</Tag>\n                    <Tag title=\"following\" color=\"#2db7f5\"><Icon type=\"user-add\" />&nbsp;{userInfo.following || 0}</Tag>\n                </div>\n                {\n                    userInfo.blog &&\n                    <>\n                        <Icon type=\"dribbble\" /> &nbsp;\n                        <a href={userInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{userInfo.blog}</a>\n                    </>\n                }\n                {\n                    userInfo.email &&\n                    <p><Icon type=\"global\" />&nbsp;{userInfo.email}</p>\n\n                }\n                {\n                    userInfo.location &&\n                    <p><Icon type=\"environment\" theme=\"filled\" />&nbsp;{userInfo.location}</p>\n                }\n                {\n                    userInfo.company && \n                    <p><Icon type=\"bank\" />&nbsp;{userInfo.company}</p>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {\n    Card,\n    Avatar,\n    Popover,\n    Icon\n} from 'antd';\nimport InfoCard from '@components/infoCard/InfoCard';\nimport api from '@api';\n\nexport default class Item extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popoverContent: <Icon type=\"loading\" />\n        }\n    }\n\n    async onMouseOver (username, visible) {\n        console.log(visible)\n        if (visible) {\n            const userInfo = await api.getInfo({ username });\n            this.setState({\n                popoverContent: <InfoCard userInfo={userInfo} />\n            });\n        }\n    }\n    \n    render() {\n        const {\n            login,\n            avatar_url,\n            html_url\n        } = this.props;\n\n        return (\n            <li className=\"item\">\n                <Card bordered={false}>\n                    <Popover content={this.state.popoverContent} title={login} mouseEnterDelay={.5} onVisibleChange={this.onMouseOver.bind(this, login)}>\n                        <Card.Meta\n                            avatar={\n                                <Avatar src={avatar_url} />\n                            }\n                            title={login} \n                        />\n                    </Popover>\n                    <p className=\"description\">\n                        <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">visit</a>\n                    </p>\n                </Card>\n            </li>\n        )\n    }\n}\n","\nimport React from 'react';\nimport Item from './components/Item';\nimport {\n    Empty,\n    Button,\n    Icon\n} from 'antd';\nimport '@style/pages/common.scss';\nimport { ls } from '@utils/localStorage';\n\nexport default class List extends React.Component {\n    state = {\n        loading: false,\n        list: [],\n        pageParam: {\n            page: 1,\n            per_page: 10,\n        }\n    };\n\n    componentDidMount = () => {\n        this.getList();\n    }\n\n    async getList() {\n        this.setState({\n            loading: true,\n            list: []\n        });\n        const listMethod = this.props.listMethod;\n        const data = await listMethod({\n            ...this.state.pageParam,\n            username: ls.get('my_github_app_username'),\n        });\n        this.setState({\n            loading: false,\n            list: data\n        });\n    }\n\n    onPageChange(type) {\n        if (type === 'pre') {\n            this.setState({\n                pageParam: {\n                    ...this.state.pageParam,\n                    page: this.state.pageParam.page - 1,\n                }\n            });\n        } else {\n            this.setState({\n                pageParam: {\n                    ...this.state.pageParam,\n                    page: this.state.pageParam.page + 1,\n                }\n            });\n        }\n        this.getList();\n    }\n\n    render() {\n        const { list } = this.state;\n        const result =\n            <div>\n                {\n                    list.length > 0 &&\n                    <ul className=\"list following-list\">\n                        {list.map(item => (\n                            <Item key={item.id} {...item}></Item>\n                        ))}\n                    </ul>\n                }\n                {\n                    list.length === 0 &&\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                }\n                <div className=\"list-page\">\n                    <Button.Group>\n                        <Button onClick={this.onPageChange.bind(this, 'pre')} disabled={this.state.pageParam.page <= 0}><Icon type=\"arrow-left\" /></Button>\n                        <span style={{fontSize: '10px'}}>&nbsp;{this.state.pageParam.page}&nbsp;</span>\n                        <Button onClick={this.onPageChange.bind(this, 'next')} disabled={!list.length}><Icon type=\"arrow-right\" /></Button>\n                    </Button.Group>\n                </div>\n            </div>;\n\n        return (\n            <div className=\"repos\">\n                {\n                    this.state.loading ? <Icon type=\"loading\" /> : result\n                }\n            </div>\n        )\n    }\n}\n","\nimport React from 'react';\nimport List from '@components/list/List';\nimport api from '@api';\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <div className=\"following\">\n                <List listMethod={api.getFollowing}/>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}