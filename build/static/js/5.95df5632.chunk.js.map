{"version":3,"sources":["pages/components/infoCard/InfoCard.js","pages/following/components/Item.js","pages/following/List.js","request/api.js","utils/util.js"],"names":["InfoCard","userInfo","this","props","console","log","className","href","html_url","target","rel","src","avatar_url","bio","title","followers","color","type","following","blog","email","location","theme","company","React","Component","Item","state","popoverContent","username","visible","api","getInfo","setState","login","bordered","content","mouseEnterDelay","onVisibleChange","onMouseOver","bind","Meta","avatar","List","componentDidMount","getList","list","getFollowing","data","concat","result","length","map","item","key","id","image","Empty","PRESENTED_IMAGE_SIMPLE","request","url","param","Promise","resolve","reject","context","fullUrl","replace","match","trim","fetch","then","r","text","res","JSON","parse","catch","err","getRepos","getFollowers"],"mappings":"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","file":"static/js/5.95df5632.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Avatar,\n    Tag,\n    Icon\n} from 'antd';\nimport './infoCard.scss';\n\nexport default class InfoCard extends React.Component {\n    render() {\n        const userInfo = this.props.userInfo;\n        console.log(userInfo)\n        return (\n            <div className=\"info-card\">\n                <a href={userInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Avatar src={userInfo.avatar_url} />\n                </a>\n                <span className=\"info-card-bio\">{userInfo.bio || 'He/She says notinng.'}</span>\n                <div className=\"info-card-tags\">\n                    <Tag title={userInfo.followers} color=\"#2db7f5\"><Icon type=\"user\" /> {userInfo.followers || 0}</Tag>\n                    <Tag title={userInfo.following} color=\"#2db7f5\"><Icon type=\"user-add\" /> {userInfo.following || 0}</Tag>\n                </div>\n                {\n                    userInfo.blog &&\n                    <p><Icon type=\"dribbble\" /> {userInfo.blog}</p>\n\n                }\n                {\n                    userInfo.email &&\n                    <p><Icon type=\"global\" /> {userInfo.email}</p>\n\n                }\n                {\n                    userInfo.location &&\n                    <p><Icon type=\"environment\" theme=\"filled\" /> {userInfo.location}</p>\n                }\n                {\n                    userInfo.company && \n                    <p><Icon type=\"bank\" /> {userInfo.company}</p>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {\n    Card,\n    Avatar,\n    Popover,\n    Icon\n} from 'antd';\nimport InfoCard from '../../components/infoCard/InfoCard';\nimport api from '../../../request/api';\n\nexport default class Item extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popoverContent: <Icon type=\"loading\" />\n        }\n    }\n\n    async onMouseOver (username, visible) {\n        console.log(visible)\n        if (visible) {\n            const userInfo = await api.getInfo({ username });\n            this.setState({\n                popoverContent: <InfoCard userInfo={userInfo} />\n            });\n        }\n    }\n    \n    render() {\n        const {\n            login,\n            avatar_url,\n            html_url\n        } = this.props;\n\n        return (\n            <li className=\"item\">\n                <Card bordered={false}>\n                    <Popover content={this.state.popoverContent} title={login} mouseEnterDelay={.5} onVisibleChange={this.onMouseOver.bind(this, login)}>\n                        <Card.Meta\n                            avatar={\n                                <Avatar src={avatar_url} />\n                            }\n                            title={login} \n                        />\n                    </Popover>\n                    <p className=\"description\">\n                        <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">visit</a>\n                    </p>\n                </Card>\n            </li>\n        )\n    }\n}\n","\nimport React from 'react';\nimport Item from './components/Item';\nimport { Empty } from 'antd';\nimport api from '../../request/api';\nimport '../../style/pages/common.scss';\n\nexport default class List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: []\n        };\n    }\n\n    componentDidMount = () => {\n        this.getList();\n    }\n\n    async getList() {\n        const data = await api.getFollowing({ username: 'xiaotianxia' });\n        this.setState({\n            list: this.state.list.concat(data)\n        });\n    }\n\n    render() {\n        const { list } = this.state;\n        let result = null;\n        if (list.length) {\n            result = <ul className=\"following-list\">\n                {list.map(item => (\n                    <Item key={item.id} {...item}></Item>\n                ))}\n            </ul>;\n        } else {\n            result = <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n        }\n        return (\n            <div className=\"repos\">\n                {result}\n            </div>\n        )\n    }\n}\n","import { renderTpl } from '../utils/util';\n\nconst HOST = 'https://api.github.com';\n\nfunction request(url, param) {\n    return new Promise((resolve, reject) => {\n        const fullUrl = renderTpl(HOST + url, param);\n        fetch(fullUrl + '?access_token=b5b06dd6c09f58cfa7dd25b0a09f3808c405467b').then(r => r.text().then(res => {\n            resolve(JSON.parse(res));\n        })).catch(err => {\n            reject(err);\n        });\n    });\n}\n\nexport default {\n    getRepos(param) {\n        return request('/users/{{username}}/repos', param)\n    },\n\n    getFollowing(param) {\n        return request('/users/{{username}}/following', param)\n    },\n\n    getFollowers(param) {\n        return request('/users/{{username}}/followers', param)\n    },\n\n    getInfo(param) {\n        return request('/users/{{username}}', param)\n    }\n};","export function renderTpl(template, context) {\n    return template.replace(/\\{\\{(.*?)\\}\\}/g, (match, key) => context[key.trim()]);\n}"],"sourceRoot":""}