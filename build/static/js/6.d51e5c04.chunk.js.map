{"version":3,"sources":["pages/following/List.js","utils/util.js","request/api.js","pages/components/infoCard/InfoCard.js","pages/components/list/components/Item.js","pages/components/list/List.js"],"names":["className","listMethod","api","getFollowing","React","Component","parseTpl","template","context","replace","match","key","trim","serializeJson","json","Object","entries","map","item","join","HOST","request","path","param","Promise","resolve","reject","fullUrl","client_id","client_secret","fetch","then","r","text","res","JSON","parse","catch","err","getRepos","getFollowers","getInfo","InfoCard","userInfo","this","props","console","log","href","html_url","target","rel","src","avatar_url","bio","title","color","type","followers","following","blog","email","location","theme","company","Item","state","popoverContent","username","visible","setState","login","bordered","content","mouseEnterDelay","onVisibleChange","onMouseOver","bind","Meta","avatar","List","loading","list","pageParam","page","per_page","componentDidMount","getList","data","result","length","id","image","Empty","PRESENTED_IMAGE_SIMPLE","Group","onClick","onPageChange","disabled","style","fontSize"],"mappings":"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","file":"static/js/6.d51e5c04.chunk.js","sourcesContent":["\nimport React from 'react';\nimport List from '../components/list/List';\nimport api from '../../request/api';\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <div className=\"following\">\n                <List listMethod={api.getFollowing}/>\n            </div>\n        )\n    }\n}\n","export const parseTpl = (template, context) => {\n    return template.replace(/\\{\\{(.*?)\\}\\}/g, (match, key) => context[key.trim()]);\n}\n\nexport const serializeJson = (json) => {\n    return Object.entries(json).map(item => {\n        return `${item[0]}=${item[1]}`\n    }).join('&')\n}","import { parseTpl, serializeJson } from '../utils/util';\n\nconst HOST = 'https://api.github.com';\n\nfunction request(path, param) {\n    return new Promise((resolve, reject) => {\n        let fullUrl = parseTpl(HOST + path, param);\n        fullUrl = fullUrl + '?' + serializeJson({\n            ...param,\n            client_id: 'aa18248a5e12eca15a6f',\n            client_secret: '389eac9e777a6ced5127b45193640580174c426d'\n        })\n        fetch(fullUrl).then(r => r.text().then(res => {\n            resolve(JSON.parse(res));\n        })).catch(err => {\n            reject(err);\n        });\n    });\n}\n\nexport default {\n    getRepos(param) {\n        return request('/users/{{username}}/repos', param)\n    },\n\n    getFollowing(param) {\n        return request('/users/{{username}}/following', param)\n    },\n\n    getFollowers(param) {\n        return request('/users/{{username}}/followers', param)\n    },\n\n    getInfo(param) {\n        return request('/users/{{username}}', param)\n    }\n};","import React from 'react';\nimport {\n    Avatar,\n    Tag,\n    Icon\n} from 'antd';\nimport './infoCard.scss';\n\nexport default class InfoCard extends React.Component {\n    render() {\n        const userInfo = this.props.userInfo;\n        console.log(userInfo)\n        return (\n            <div className=\"info-card\">\n                <a href={userInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Avatar src={userInfo.avatar_url} />\n                </a>\n                <span className=\"info-card-bio\">{userInfo.bio || 'He/She says notinng.'}</span>\n                <div className=\"info-card-tags\">\n                    <Tag title=\"followers\" color=\"#2db7f5\"><Icon type=\"user\" />&nbsp;{userInfo.followers || 0}</Tag>\n                    <Tag title=\"following\" color=\"#2db7f5\"><Icon type=\"user-add\" />&nbsp;{userInfo.following || 0}</Tag>\n                </div>\n                {\n                    userInfo.blog &&\n                    <>\n                        <Icon type=\"dribbble\" /> &nbsp;\n                        <a href={userInfo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{userInfo.blog}</a>\n                    </>\n                }\n                {\n                    userInfo.email &&\n                    <p><Icon type=\"global\" />&nbsp;{userInfo.email}</p>\n\n                }\n                {\n                    userInfo.location &&\n                    <p><Icon type=\"environment\" theme=\"filled\" />&nbsp;{userInfo.location}</p>\n                }\n                {\n                    userInfo.company && \n                    <p><Icon type=\"bank\" />&nbsp;{userInfo.company}</p>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {\n    Card,\n    Avatar,\n    Popover,\n    Icon\n} from 'antd';\nimport InfoCard from '../../infoCard/InfoCard';\nimport api from '../../../../request/api';\n\nexport default class Item extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popoverContent: <Icon type=\"loading\" />\n        }\n    }\n\n    async onMouseOver (username, visible) {\n        console.log(visible)\n        if (visible) {\n            const userInfo = await api.getInfo({ username });\n            this.setState({\n                popoverContent: <InfoCard userInfo={userInfo} />\n            });\n        }\n    }\n    \n    render() {\n        const {\n            login,\n            avatar_url,\n            html_url\n        } = this.props;\n\n        return (\n            <li className=\"item\">\n                <Card bordered={false}>\n                    <Popover content={this.state.popoverContent} title={login} mouseEnterDelay={.5} onVisibleChange={this.onMouseOver.bind(this, login)}>\n                        <Card.Meta\n                            avatar={\n                                <Avatar src={avatar_url} />\n                            }\n                            title={login} \n                        />\n                    </Popover>\n                    <p className=\"description\">\n                        <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">visit</a>\n                    </p>\n                </Card>\n            </li>\n        )\n    }\n}\n","\nimport React from 'react';\nimport Item from './components/Item';\nimport {\n    Empty,\n    Button,\n    Icon\n} from 'antd';\nimport '../../../style/pages/common.scss';\n\nexport default class List extends React.Component {\n    state = {\n        loading: false,\n        list: [],\n        pageParam: {\n            page: 1,\n            per_page: 10,\n        }\n    };\n\n    componentDidMount = () => {\n        console.log(this.props)\n        this.getList();\n    }\n\n    async getList() {\n        this.setState({\n            loading: true,\n            list: []\n        });\n        const listMethod = this.props.listMethod;\n        const data = await listMethod({\n            ...this.state.pageParam,\n            username: 'xiaotianxia',\n        });\n        this.setState({\n            loading: false,\n            list: data\n        });\n        console.log(this.state.pageParam.page)\n    }\n\n    onPageChange(type) {\n        if (type === 'pre') {\n            this.setState({\n                pageParam: {\n                    ...this.state.pageParam,\n                    page: this.state.pageParam.page - 1,\n                }\n            });\n        } else {\n            this.setState({\n                pageParam: {\n                    ...this.state.pageParam,\n                    page: this.state.pageParam.page + 1,\n                }\n            });\n        }\n        this.getList();\n        console.log(this.state.pageParam.page)\n    }\n\n    render() {\n        const { list } = this.state;\n        const result =\n            <div>\n                {\n                    list.length > 0 &&\n                    <ul className=\"list following-list\">\n                        {list.map(item => (\n                            <Item key={item.id} {...item}></Item>\n                        ))}\n                    </ul>\n                }\n                {\n                    list.length === 0 &&\n                    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                }\n                <div className=\"list-page\">\n                    <Button.Group>\n                        <Button onClick={this.onPageChange.bind(this, 'pre')} disabled={this.state.pageParam.page <= 0}><Icon type=\"left\" />上一页</Button>\n                        <span style={{fontSize: '12px'}}>&nbsp;{this.state.pageParam.page}&nbsp;</span>\n                        <Button onClick={this.onPageChange.bind(this, 'next')} disabled={!list.length}>下一页<Icon type=\"right\" /></Button>\n                    </Button.Group>\n                </div>\n            </div>;\n\n        return (\n            <div className=\"repos\">\n                {\n                    this.state.loading ? <Icon type=\"loading\" /> : result\n                }\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}