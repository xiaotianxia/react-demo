{"version":3,"sources":["pages/repos/components/Item.js","pages/repos/List.js","request/api.js","utils/util.js"],"names":["Item","this","props","name","description","language","html_url","watchers_count","stargazers_count","forks_count","className","title","href","target","rel","color","type","React","Component","List","componentDidMount","getList","state","list","api","getRepos","username","data","console","log","setState","concat","result","length","map","item","key","id","image","Empty","PRESENTED_IMAGE_SIMPLE","request","path","param","Promise","resolve","reject","context","json","fullUrl","replace","match","trim","access_token","Object","entries","join","fetch","then","r","text","res","JSON","parse","catch","err","getFollowing","getFollowers","getInfo"],"mappings":"8NAOqBA,E,iLACP,IAAD,EASDC,KAAKC,MAPLC,EAFC,EAEDA,KACAC,EAHC,EAGDA,YACAC,EAJC,EAIDA,SACAC,EALC,EAKDA,SACAC,EANC,EAMDA,eACAC,EAPC,EAODA,iBACAC,EARC,EAQDA,YAEJ,OACI,wBAAIC,UAAU,QACV,kBAAC,IAAD,CAAMC,MAAOR,GACT,uBAAGO,UAAU,eAAc,uBAAGE,KAAMN,EAAUO,OAAO,SAASC,IAAI,uBAAuBV,IACzF,kBAAC,IAAD,CAAKW,MAAM,WAAU,kBAAC,IAAD,CAAMC,KAAK,SAAhC,IAA2CX,GAC3C,kBAAC,IAAD,CAAKU,MAAM,WAAU,kBAAC,IAAD,CAAMC,KAAK,QAAhC,IAA0CT,GAC1C,kBAAC,IAAD,CAAKQ,MAAM,WAAU,kBAAC,IAAD,CAAMC,KAAK,SAAhC,IAA2CR,GAC3C,kBAAC,IAAD,CAAKO,MAAM,QAAO,kBAAC,IAAD,CAAMC,KAAK,SAA7B,IAAwCP,S,GAlB1BQ,IAAMC,W,mECAnBC,E,YACjB,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KAMVkB,kBAAoB,WAChB,EAAKC,WANL,EAAKC,MAAQ,CACTC,KAAM,IAHK,E,yKAYIC,IAAIC,SAAS,CAACC,SAAU,iB,OAArCC,E,OACNC,QAAQC,IAAIF,GACZ1B,KAAK6B,SAAS,CACVP,KAAMtB,KAAKqB,MAAMC,KAAKQ,OAAOJ,K,gFAI3B,IACEJ,EAAStB,KAAKqB,MAAdC,KACJS,EAAS,KAUb,OARIA,EADAT,EAAKU,OACI,wBAAIvB,UAAU,cAClBa,EAAKW,KAAI,SAAAC,GAAI,OACV,kBAAC,EAAD,eAAMC,IAAKD,EAAKE,IAAQF,QAIvB,kBAAC,IAAD,CAAOG,MAAOC,IAAMC,yBAG7B,yBAAK9B,UAAU,SACVsB,O,GAlCiBf,IAAMC,Y,4CCHxC,SAASuB,EAAQC,EAAMC,GACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,ICN2BC,EAILC,EDElBC,GCNuBF,EDMSJ,GAJ/B,yBAIyBD,GCLlBQ,QAAQ,kBAAkB,SAACC,EAAOf,GAAR,OAAgBW,EAAQX,EAAIgB,YDMlEH,EAAUA,EAAU,KCHED,EDGkB,eACjCL,EADgC,CAEnCU,aAAc,6CCJfC,OAAOC,QAAQP,GAAMd,KAAI,SAAAC,GAC5B,MAAM,GAAN,OAAUA,EAAK,GAAf,YAAqBA,EAAK,OAC3BqB,KAAK,MDIJC,MAAMR,GAASS,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAOF,MAAK,SAAAG,GACnChB,EAAQiB,KAAKC,MAAMF,UACnBG,OAAM,SAAAC,GACNnB,EAAOmB,SAKJ,KACXxC,SADW,SACFkB,GACL,OAAOF,EAAQ,4BAA6BE,IAGhDuB,aALW,SAKEvB,GACT,OAAOF,EAAQ,gCAAiCE,IAGpDwB,aATW,SASExB,GACT,OAAOF,EAAQ,gCAAiCE,IAGpDyB,QAbW,SAaHzB,GACJ,OAAOF,EAAQ,sBAAuBE,M","file":"static/js/7.5992bfe3.chunk.js","sourcesContent":["import React from 'react';\nimport { \n    Card,\n    Tag,\n    Icon \n} from 'antd';\n\nexport default class Item extends React.Component {\n    render() {\n        const {\n            name,\n            description,\n            language,\n            html_url,\n            watchers_count,\n            stargazers_count,\n            forks_count\n        } = this.props;\n        return (\n            <li className=\"item\">\n                <Card title={name}>\n                    <p className=\"description\"><a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">{description}</a></p>\n                    <Tag color=\"#2db7f5\"><Icon type=\"code\" /> {language}</Tag>\n                    <Tag color=\"#87d068\"><Icon type=\"eye\" /> {watchers_count}</Tag>\n                    <Tag color=\"#108ee9\"><Icon type=\"star\" /> {stargazers_count}</Tag>\n                    <Tag color=\"#f50\"><Icon type=\"fork\" /> {forks_count}</Tag>\n                </Card>\n            </li>\n        )\n    }\n}\n","\nimport React from 'react';\nimport Item from './components/Item';\nimport { Empty } from 'antd';\nimport api from '../../request/api';\nimport '../../style/pages/common.scss';\n\nexport default class List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: []\n        };\n    }\n\n    componentDidMount = () => {\n        this.getList();\n    }\n\n    async getList() {\n        const data = await api.getRepos({username: 'xiaotianxia'});\n        console.log(data)\n        this.setState({\n            list: this.state.list.concat(data)\n        });\n    }\n\n    render() {\n        const { list } = this.state;\n        let result = null;\n        if (list.length) {\n            result = <ul className=\"repos-list\">\n                {list.map(item => (\n                    <Item key={item.id} {...item}></Item>\n                ))}\n            </ul>;\n        } else {\n            result = <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />;\n        }\n        return (\n            <div className=\"repos\">\n                {result}\n            </div>\n        )\n    }\n}\n","import { parseTpl, serializeJson } from '../utils/util';\n\nconst HOST = 'https://api.github.com';\n\nfunction request(path, param) {\n    return new Promise((resolve, reject) => {\n        let fullUrl = parseTpl(HOST + path, param);\n        fullUrl = fullUrl + '?' + serializeJson({\n            ...param,\n            access_token: 'e9228c949375c65213044a74ffdba2e011af9414'\n        })\n        fetch(fullUrl).then(r => r.text().then(res => {\n            resolve(JSON.parse(res));\n        })).catch(err => {\n            reject(err);\n        });\n    });\n}\n\nexport default {\n    getRepos(param) {\n        return request('/users/{{username}}/repos', param)\n    },\n\n    getFollowing(param) {\n        return request('/users/{{username}}/following', param)\n    },\n\n    getFollowers(param) {\n        return request('/users/{{username}}/followers', param)\n    },\n\n    getInfo(param) {\n        return request('/users/{{username}}', param)\n    }\n};","export const parseTpl = (template, context) => {\n    return template.replace(/\\{\\{(.*?)\\}\\}/g, (match, key) => context[key.trim()]);\n}\n\nexport const serializeJson = (json) => {\n    return Object.entries(json).map(item => {\n        return `${item[0]}=${item[1]}`\n    }).join('&')\n}"],"sourceRoot":""}